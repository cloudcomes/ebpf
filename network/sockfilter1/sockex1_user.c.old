// SPDX-License-Identifier: GPL-2.0
#include <stdio.h>
#include <assert.h>
#include <linux/bpf.h>
#include <bpf.h>
//#include <bpf/libbpf.h>
#include "sock_example.h"
#include <unistd.h>
#include <arpa/inet.h>
#include "sockex1.skel.h"



int main(int ac, char **argv)
{
	int prog_fd;
	int  sock;
	FILE *f,*fff;

    int size;
	char buff[65535];

	struct sockex1_kern *skel;

    /* Load and verify BPF application */ 
    skel = sockex1_kern__open_and_load();
	if (!skel) {
	  fprintf(stderr, "Failed to open and load eBPF skeleton\n");
	  return 1;
	}   
    
	prog_fd = bpf_program__fd(skel->progs.bpf_prog1);
	
	sock = open_raw_sock("lo");

	assert(setsockopt(sock, SOL_SOCKET, SO_ATTACH_BPF, &prog_fd,
			  sizeof(prog_fd)) == 0);

    while (1) {
		f = popen("ping -4 -c5 localhost", "r");
	    (void) f;
		size = read(sock,buff,sizeof(buff));
		printf("recv from sock (%d octets)\n",size);
		printf("recv from sock (%s buff)\n",buff);
        fff = popen("netperf -t UDP_STREAM -l 4 localhost", "r");
        (void) fff;
					
	}
   
   	return 0;
}

