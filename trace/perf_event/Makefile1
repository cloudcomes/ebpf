# Common Makefile parts for BPF-building with libbpf

KERN_TARGETS := trace_event_kern
USER_TARGETS := trace_event_user
TRACE_OBJ := trace_helpers

LLC ?= llc
CLANG ?= clang
CC ?= gcc

KERN_C = ${KERN_TARGETS:=.c}
KERN_OBJ = ${KERN_C:.c=.o}

USER_C := ${USER_TARGETS:=.c}
USER_OBJ := ${USER_C:.c=.o}

TRACE_C := ${TRACE_OBJ:=.c}
TRACE_OBJ := ${TRACE_C:.c=.o}

#Linux source code folder
SRC_DIR ?= /usr/src/linux-source-5.11.0/linux-source-5.11.0

# Expect this is defined by including Makefile, but define if not
LIBBPF_DIR ?= ../libbpf/src
OBJECT_LIBBPF = $(LIBBPF_DIR)/libbpf.a

LDFLAGS ?= -L$(LIBBPF_DIR)/

BPF_GCCFLAGS ?= -I$(SRC_DIR)/tools/testing/selftests/bpf/
BPF_GCCFLAGS += -I$(SRC_DIR)/usr/include/
BPF_GCCFLAGS += -I$(SRC_DIR)/tools/lib/
BPF_GCCFLAGS += -I$(SRC_DIR)/tools/include/
BPF_GCCFLAGS += -I$(SRC_DIR)/tools/perf/
BPF_GCCFLAGS += -I../libbpf/src/

BPF_CFLAGS ?= -I../libbpf/src/

LIBS = -l:libbpf.a -lelf -lz 

all: llvm-check $(KERN_OBJ) $(TRACE_OBJ) $(USER_OBJ) $(USER_TARGETS)

.PHONY: clean $(CLANG) $(LLC)

clean:
	rm -rf $(LIBBPF_DIR)/build
	$(MAKE) -C $(LIBBPF_DIR) clean
	rm -f *.ll
	rm -f *.o

llvm-check: $(CLANG) $(LLC)
	@for TOOL in $^ ; do \
           if [ ! $$(command -v $${TOOL} 2>/dev/null) ]; then \
              echo "*** ERROR: Cannot find tool $${TOOL}" ;\
              exit 1; \
           else true; fi; \
        done

$(OBJECT_LIBBPF):
	@if [ ! -d $(LIBBPF_DIR) ]; then \
	  echo "Error: Need libbpf submodule"; \
	  echo "May need to run git submodule update --init"; \
	  exit 1; \
	else \
          cd $(LIBBPF_DIR) && $(MAKE) all OBJDIR=.; \
          mkdir -p build; $(MAKE) install_headers DESTDIR=build OBJDIR=.; \
        fi

$(TRACE_OBJ): 
	$(CC) -Wall -O2 -Wmissing-prototypes -Wstrict-prototypes $(BPF_GCCFLAGS)  \
        -DHAVE_ATTR_TEST=0 \
         -c -o ./trace_helpers.o $(SRC_DIR)/tools/testing/selftests/bpf/trace_helpers.c;

$(USER_OBJ): 
	$(CC) -Wall -O2 -Wmissing-prototypes -Wstrict-prototypes $(BPF_GCCFLAGS)  \
        -DHAVE_ATTR_TEST=0 \
        -c -o ./trace_event_user.o ./trace_event_user.c

$(USER_TARGETS):
	$(CC) -Wp,-MD,-Wall -O2 -Wmissing-prototypes -Wstrict-prototypes $(BPF_GCCFLAGS)  \
        -DHAVE_ATTR_TEST=0 \
	-o ./trace_event ./trace_event_user.o ./trace_helpers.o ../libbpf/src/libbpf.a -lelf -lz

$(KERN_OBJ): %.o: %.c  $(OBJECT_LIBBPF)
	$(CLANG) -S \
        -target bpf \
            -D __BPF_TRACING__ \
            $(BPF_CFLAGS) \
            -Wall \
            -Wno-unused-value \
            -Wno-pointer-sign \
            -Wno-compare-distinct-pointer-types \
            -Werror \
            -D__TARGET_ARCH_x86 \
            -O2 -emit-llvm -c -g -o ${@:.o=.ll} $<
	$(LLC) -march=bpf -filetype=obj -o $@ ${@:.o=.ll}

