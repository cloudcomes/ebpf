/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __TRACEX3_BPF_SKEL_H__
#define __TRACEX3_BPF_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct tracex3_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *my_map;
		struct bpf_map *lat_map;
	} maps;
	struct {
		struct bpf_program *bpf_prog1;
		struct bpf_program *bpf_prog2;
	} progs;
	struct {
		struct bpf_link *bpf_prog1;
		struct bpf_link *bpf_prog2;
	} links;

#ifdef __cplusplus
	static inline struct tracex3_bpf *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct tracex3_bpf *open_and_load();
	static inline int load(struct tracex3_bpf *skel);
	static inline int attach(struct tracex3_bpf *skel);
	static inline void detach(struct tracex3_bpf *skel);
	static inline void destroy(struct tracex3_bpf *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
tracex3_bpf__destroy(struct tracex3_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
tracex3_bpf__create_skeleton(struct tracex3_bpf *obj);

static inline struct tracex3_bpf *
tracex3_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct tracex3_bpf *obj;
	int err;

	obj = (struct tracex3_bpf *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = tracex3_bpf__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	tracex3_bpf__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct tracex3_bpf *
tracex3_bpf__open(void)
{
	return tracex3_bpf__open_opts(NULL);
}

static inline int
tracex3_bpf__load(struct tracex3_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct tracex3_bpf *
tracex3_bpf__open_and_load(void)
{
	struct tracex3_bpf *obj;
	int err;

	obj = tracex3_bpf__open();
	if (!obj)
		return NULL;
	err = tracex3_bpf__load(obj);
	if (err) {
		tracex3_bpf__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
tracex3_bpf__attach(struct tracex3_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
tracex3_bpf__detach(struct tracex3_bpf *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *tracex3_bpf__elf_bytes(size_t *sz);

static inline int
tracex3_bpf__create_skeleton(struct tracex3_bpf *obj)
{
	struct bpf_object_skeleton *s;
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "tracex3_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 2;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	s->maps[0].name = "my_map";
	s->maps[0].map = &obj->maps.my_map;

	s->maps[1].name = "lat_map";
	s->maps[1].map = &obj->maps.lat_map;

	/* programs */
	s->prog_cnt = 2;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "bpf_prog1";
	s->progs[0].prog = &obj->progs.bpf_prog1;
	s->progs[0].link = &obj->links.bpf_prog1;

	s->progs[1].name = "bpf_prog2";
	s->progs[1].prog = &obj->progs.bpf_prog2;
	s->progs[1].link = &obj->links.bpf_prog2;

	s->data = (void *)tracex3_bpf__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *tracex3_bpf__elf_bytes(size_t *sz)
{
	*sz = 7192;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x18\x18\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x10\0\
\x0f\0\xbf\x16\0\0\0\0\0\0\x85\0\0\0\x05\0\0\0\x7b\x0a\xf8\xff\0\0\0\0\x61\x61\
\x08\0\0\0\0\0\x63\x1a\xe8\xff\0\0\0\0\xb7\x01\0\0\0\0\0\0\x63\x1a\xec\xff\0\0\
\0\0\x79\x61\x10\0\0\0\0\0\x7b\x1a\xf0\xff\0\0\0\0\xbf\xa2\0\0\0\0\0\0\x07\x02\
\0\0\xe8\xff\xff\xff\xbf\xa3\0\0\0\0\0\0\x07\x03\0\0\xf8\xff\xff\xff\x18\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x04\0\0\0\0\0\0\x85\0\0\0\x02\0\0\0\xb7\0\0\0\0\
\0\0\0\x95\0\0\0\0\0\0\0\x61\x12\x08\0\0\0\0\0\xb7\x03\0\0\0\0\0\0\x63\x3a\xf4\
\xff\0\0\0\0\x63\x2a\xf0\xff\0\0\0\0\x79\x11\x10\0\0\0\0\0\x7b\x1a\xf8\xff\0\0\
\0\0\xbf\xa2\0\0\0\0\0\0\x07\x02\0\0\xf0\xff\xff\xff\x18\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x85\0\0\0\x01\0\0\0\xbf\x07\0\0\0\0\0\0\x15\x07\x54\0\0\0\0\0\x85\0\
\0\0\x05\0\0\0\xbf\x06\0\0\0\0\0\0\x79\x77\0\0\0\0\0\0\xbf\xa2\0\0\0\0\0\0\x07\
\x02\0\0\xf0\xff\xff\xff\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x03\0\0\
\0\x1f\x76\0\0\0\0\0\0\xb7\x02\0\0\xff\xff\xff\xff\x15\x06\x01\0\0\0\0\0\xb7\
\x02\0\0\0\0\0\0\xb7\x01\0\0\x20\0\0\0\x18\x03\0\0\xff\xff\xff\xff\0\0\0\0\0\0\
\0\0\x2d\x36\x01\0\0\0\0\0\xbf\x21\0\0\0\0\0\0\xbf\x62\0\0\0\0\0\0\x77\x02\0\0\
\x20\0\0\0\x2d\x36\x01\0\0\0\0\0\xbf\x62\0\0\0\0\0\0\xbf\x13\0\0\0\0\0\0\x07\
\x03\0\0\x10\0\0\0\x25\x02\x01\0\xff\xff\0\0\xbf\x13\0\0\0\0\0\0\xbf\x21\0\0\0\
\0\0\0\x77\x01\0\0\x10\0\0\0\x25\x02\x01\0\xff\xff\0\0\xbf\x21\0\0\0\0\0\0\xbf\
\x32\0\0\0\0\0\0\x07\x02\0\0\x08\0\0\0\x25\x01\x01\0\xff\0\0\0\xbf\x32\0\0\0\0\
\0\0\xbf\x13\0\0\0\0\0\0\x77\x03\0\0\x08\0\0\0\x25\x01\x01\0\xff\0\0\0\xbf\x13\
\0\0\0\0\0\0\xbf\x24\0\0\0\0\0\0\x07\x04\0\0\x04\0\0\0\x25\x03\x01\0\x0f\0\0\0\
\xbf\x24\0\0\0\0\0\0\xbf\x32\0\0\0\0\0\0\x77\x02\0\0\x04\0\0\0\x25\x03\x01\0\
\x0f\0\0\0\xbf\x32\0\0\0\0\0\0\xbf\x41\0\0\0\0\0\0\x07\x01\0\0\x02\0\0\0\x25\
\x02\x01\0\x03\0\0\0\xbf\x41\0\0\0\0\0\0\xbf\x23\0\0\0\0\0\0\x77\x03\0\0\x02\0\
\0\0\x25\x02\x01\0\x03\0\0\0\xbf\x23\0\0\0\0\0\0\xb7\x02\0\0\x01\0\0\0\xb7\x04\
\0\0\x01\0\0\0\x25\x03\x01\0\x01\0\0\0\xb7\x04\0\0\0\0\0\0\x0f\x41\0\0\0\0\0\0\
\x67\x01\0\0\x20\0\0\0\x77\x01\0\0\x20\0\0\0\x6f\x12\0\0\0\0\0\0\x1f\x26\0\0\0\
\0\0\0\x67\x06\0\0\x06\0\0\0\x7f\x16\0\0\0\0\0\0\x67\x01\0\0\x06\0\0\0\x0f\x16\
\0\0\0\0\0\0\x27\x06\0\0\x03\0\0\0\x77\x06\0\0\x06\0\0\0\xbf\x61\0\0\0\0\0\0\
\x67\x01\0\0\x20\0\0\0\x77\x01\0\0\x20\0\0\0\xb7\x02\0\0\x63\0\0\0\x2d\x12\x01\
\0\0\0\0\0\xb7\x06\0\0\x63\0\0\0\x63\x6a\xec\xff\0\0\0\0\xbf\xa2\0\0\0\0\0\0\
\x07\x02\0\0\xec\xff\xff\xff\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x01\
\0\0\0\x15\0\x03\0\0\0\0\0\x79\x01\0\0\0\0\0\0\x07\x01\0\0\x01\0\0\0\x7b\x10\0\
\0\0\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x47\x50\x4c\0\xff\x04\x05\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\
\x30\x04\0\0\x30\x04\0\0\x88\x04\0\0\0\0\0\0\x04\0\0\x04\x20\0\0\0\x01\0\0\0\
\x02\0\0\0\0\0\0\0\x06\0\0\0\x06\0\0\0\x40\0\0\0\x0a\0\0\0\x08\0\0\0\x80\0\0\0\
\x10\0\0\0\x0c\0\0\0\xc0\0\0\0\0\0\0\0\0\0\0\x02\x04\0\0\0\x1c\0\0\0\0\0\0\x01\
\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x01\0\0\0\
\x20\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x02\x07\0\0\0\x34\0\0\0\
\0\0\0\x01\x08\0\0\0\x40\0\0\x01\0\0\0\0\0\0\0\x02\x09\0\0\0\x3d\0\0\0\0\0\0\
\x08\x0a\0\0\0\x41\0\0\0\0\0\0\x08\x0b\0\0\0\x47\0\0\0\0\0\0\x01\x08\0\0\0\x40\
\0\0\0\0\0\0\0\0\0\0\x02\x0d\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\
\0\0\x10\0\0\x5e\0\0\0\0\0\0\x0e\x01\0\0\0\x01\0\0\0\0\0\0\0\x04\0\0\x04\x20\0\
\0\0\x01\0\0\0\x10\0\0\0\0\0\0\0\x65\0\0\0\x12\0\0\0\x40\0\0\0\x6e\0\0\0\x14\0\
\0\0\x80\0\0\0\x10\0\0\0\x16\0\0\0\xc0\0\0\0\0\0\0\0\0\0\0\x02\x11\0\0\0\0\0\0\
\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\x02\x13\0\0\0\
\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\x02\x15\
\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\
\x02\x17\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x05\0\0\0\x64\0\0\0\x79\0\0\
\0\0\0\0\x0e\x0f\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x1a\0\0\0\x81\0\0\0\x09\0\0\
\x04\x40\0\0\0\x9a\0\0\0\x1b\0\0\0\0\0\0\0\x9e\0\0\0\x1e\0\0\0\x40\0\0\0\xa2\0\
\0\0\x23\0\0\0\x80\0\0\0\xa9\0\0\0\x22\0\0\0\xc0\0\0\0\xb3\0\0\0\x22\0\0\0\xe0\
\0\0\0\xb9\0\0\0\x25\0\0\0\0\x01\0\0\xbe\0\0\0\x26\0\0\0\x40\x01\0\0\xc3\0\0\0\
\x20\0\0\0\xc0\x01\0\0\xd2\0\0\0\x27\0\0\0\xe0\x01\0\0\xd9\0\0\0\x04\0\0\x04\
\x08\0\0\0\x01\0\0\0\x1c\0\0\0\0\0\0\0\xe5\0\0\0\x1d\0\0\0\x10\0\0\0\xeb\0\0\0\
\x1d\0\0\0\x18\0\0\0\xf9\0\0\0\x03\0\0\0\x20\0\0\0\xfd\0\0\0\0\0\0\x01\x02\0\0\
\0\x10\0\0\0\x0c\x01\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\0\x1a\x01\0\0\0\0\0\x08\
\x1f\0\0\0\x20\x01\0\0\0\0\0\x08\x20\0\0\0\x2f\x01\0\0\0\0\0\x08\x21\0\0\0\x33\
\x01\0\0\0\0\0\x08\x22\0\0\0\x39\x01\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\x46\x01\
\0\0\0\0\0\x08\x09\0\0\0\x4f\x01\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\
\0\0\x03\0\0\0\0\x24\0\0\0\x05\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x24\0\
\0\0\x05\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x24\0\0\0\x05\0\0\0\0\0\0\0\
\0\0\0\0\x01\0\0\x0d\x03\0\0\0\x54\x01\0\0\x19\0\0\0\x58\x01\0\0\x01\0\0\x0c\
\x28\0\0\0\0\0\0\0\x01\0\0\x0d\x03\0\0\0\x54\x01\0\0\x19\0\0\0\x99\x02\0\0\x01\
\0\0\x0c\x2a\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x24\0\0\0\x05\0\0\0\x04\0\0\0\x60\
\x04\0\0\0\0\0\x0e\x2c\0\0\0\x01\0\0\0\x69\x04\0\0\0\0\0\x0e\x20\0\0\0\x01\0\0\
\0\x72\x04\0\0\x02\0\0\x0f\0\0\0\0\x0e\0\0\0\0\0\0\0\x20\0\0\0\x18\0\0\0\0\0\0\
\0\x20\0\0\0\x78\x04\0\0\x01\0\0\x0f\0\0\0\0\x2d\0\0\0\0\0\0\0\x04\0\0\0\x80\
\x04\0\0\x01\0\0\x0f\0\0\0\0\x2e\0\0\0\0\0\0\0\x04\0\0\0\0\x74\x79\x70\x65\0\
\x6b\x65\x79\0\x76\x61\x6c\x75\x65\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\
\x73\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\
\x59\x50\x45\x5f\x5f\0\x6c\x6f\x6e\x67\x20\x69\x6e\x74\0\x75\x36\x34\0\x5f\x5f\
\x75\x36\x34\0\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\x20\x75\x6e\x73\x69\x67\x6e\
\x65\x64\x20\x69\x6e\x74\0\x6d\x79\x5f\x6d\x61\x70\0\x6b\x65\x79\x5f\x73\x69\
\x7a\x65\0\x76\x61\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\x6c\x61\x74\x5f\x6d\x61\
\x70\0\x74\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\x5f\x72\x61\x77\x5f\x62\x6c\
\x6f\x63\x6b\x5f\x72\x71\0\x65\x6e\x74\0\x64\x65\x76\0\x73\x65\x63\x74\x6f\x72\
\0\x6e\x72\x5f\x73\x65\x63\x74\x6f\x72\0\x62\x79\x74\x65\x73\0\x72\x77\x62\x73\
\0\x63\x6f\x6d\x6d\0\x5f\x5f\x64\x61\x74\x61\x5f\x6c\x6f\x63\x5f\x63\x6d\x64\0\
\x5f\x5f\x64\x61\x74\x61\0\x74\x72\x61\x63\x65\x5f\x65\x6e\x74\x72\x79\0\x66\
\x6c\x61\x67\x73\0\x70\x72\x65\x65\x6d\x70\x74\x5f\x63\x6f\x75\x6e\x74\0\x70\
\x69\x64\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x75\x6e\
\x73\x69\x67\x6e\x65\x64\x20\x63\x68\x61\x72\0\x64\x65\x76\x5f\x74\0\x5f\x5f\
\x6b\x65\x72\x6e\x65\x6c\x5f\x64\x65\x76\x5f\x74\0\x75\x33\x32\0\x5f\x5f\x75\
\x33\x32\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x73\x65\x63\x74\
\x6f\x72\x5f\x74\0\x63\x68\x61\x72\0\x63\x74\x78\0\x62\x70\x66\x5f\x70\x72\x6f\
\x67\x31\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\x62\x6c\x6f\x63\x6b\x2f\
\x62\x6c\x6f\x63\x6b\x5f\x69\x6f\x5f\x73\x74\x61\x72\x74\0\x2f\x72\x6f\x6f\x74\
\x2f\x63\x6c\x6f\x75\x64\x2f\x32\x30\x32\x34\x2f\x65\x62\x70\x66\x2f\x70\x72\
\x6f\x6a\x65\x63\x74\x73\x2f\x69\x6f\x2f\x6c\x61\x74\x65\x6e\x63\x79\x2f\x74\
\x72\x61\x63\x65\x78\x33\x2e\x62\x70\x66\x2e\x63\0\x69\x6e\x74\x20\x62\x70\x66\
\x5f\x70\x72\x6f\x67\x31\x28\x73\x74\x72\x75\x63\x74\x20\x74\x72\x61\x63\x65\
\x5f\x65\x76\x65\x6e\x74\x5f\x72\x61\x77\x5f\x62\x6c\x6f\x63\x6b\x5f\x72\x71\
\x20\x2a\x63\x74\x78\x29\0\x09\x75\x36\x34\x20\x76\x61\x6c\x20\x3d\x20\x62\x70\
\x66\x5f\x6b\x74\x69\x6d\x65\x5f\x67\x65\x74\x5f\x6e\x73\x28\x29\x3b\0\x30\x3a\
\x31\0\x09\x09\x2e\x64\x65\x76\x20\x3d\x20\x63\x74\x78\x2d\x3e\x64\x65\x76\x2c\
\0\x09\x73\x74\x72\x75\x63\x74\x20\x73\x74\x61\x72\x74\x5f\x6b\x65\x79\x20\x6b\
\x65\x79\x20\x3d\x20\x7b\0\x30\x3a\x32\0\x09\x09\x2e\x73\x65\x63\x74\x6f\x72\
\x20\x3d\x20\x63\x74\x78\x2d\x3e\x73\x65\x63\x74\x6f\x72\0\x09\x62\x70\x66\x5f\
\x6d\x61\x70\x5f\x75\x70\x64\x61\x74\x65\x5f\x65\x6c\x65\x6d\x28\x26\x6d\x79\
\x5f\x6d\x61\x70\x2c\x20\x26\x6b\x65\x79\x2c\x20\x26\x76\x61\x6c\x2c\x20\x42\
\x50\x46\x5f\x41\x4e\x59\x29\x3b\0\x09\x72\x65\x74\x75\x72\x6e\x20\x30\x3b\0\
\x62\x70\x66\x5f\x70\x72\x6f\x67\x32\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\
\x2f\x62\x6c\x6f\x63\x6b\x2f\x62\x6c\x6f\x63\x6b\x5f\x69\x6f\x5f\x64\x6f\x6e\
\x65\0\x09\x76\x61\x6c\x75\x65\x20\x3d\x20\x62\x70\x66\x5f\x6d\x61\x70\x5f\x6c\
\x6f\x6f\x6b\x75\x70\x5f\x65\x6c\x65\x6d\x28\x26\x6d\x79\x5f\x6d\x61\x70\x2c\
\x20\x26\x6b\x65\x79\x29\x3b\0\x09\x69\x66\x20\x28\x21\x76\x61\x6c\x75\x65\x29\
\0\x09\x75\x36\x34\x20\x63\x75\x72\x5f\x74\x69\x6d\x65\x20\x3d\x20\x62\x70\x66\
\x5f\x6b\x74\x69\x6d\x65\x5f\x67\x65\x74\x5f\x6e\x73\x28\x29\x3b\0\x09\x75\x36\
\x34\x20\x64\x65\x6c\x74\x61\x20\x3d\x20\x63\x75\x72\x5f\x74\x69\x6d\x65\x20\
\x2d\x20\x2a\x76\x61\x6c\x75\x65\x3b\0\x09\x62\x70\x66\x5f\x6d\x61\x70\x5f\x64\
\x65\x6c\x65\x74\x65\x5f\x65\x6c\x65\x6d\x28\x26\x6d\x79\x5f\x6d\x61\x70\x2c\
\x20\x26\x6b\x65\x79\x29\x3b\0\x09\x69\x6e\x74\x20\x69\x20\x3d\x20\x2d\x28\x6e\
\x20\x3d\x3d\x20\x30\x29\x3b\0\x09\x53\x28\x33\x32\x29\x3b\x20\x53\x28\x31\x36\
\x29\x3b\x20\x53\x28\x38\x29\x3b\x20\x53\x28\x34\x29\x3b\x20\x53\x28\x32\x29\
\x3b\x20\x53\x28\x31\x29\x3b\0\x09\x6c\x20\x3d\x20\x6c\x6f\x67\x32\x6c\x28\x64\
\x65\x6c\x74\x61\x29\x3b\0\x09\x62\x61\x73\x65\x20\x3d\x20\x31\x6c\x6c\x20\x3c\
\x3c\x20\x6c\x3b\0\x09\x69\x6e\x64\x65\x78\x20\x3d\x20\x28\x6c\x20\x2a\x20\x36\
\x34\x20\x2b\x20\x28\x64\x65\x6c\x74\x61\x20\x2d\x20\x62\x61\x73\x65\x29\x20\
\x2a\x20\x36\x34\x20\x2f\x20\x62\x61\x73\x65\x29\x20\x2a\x20\x33\x20\x2f\x20\
\x36\x34\x3b\0\x09\x69\x66\x20\x28\x69\x6e\x64\x65\x78\x20\x3e\x3d\x20\x53\x4c\
\x4f\x54\x53\x29\0\x09\x76\x61\x6c\x75\x65\x20\x3d\x20\x62\x70\x66\x5f\x6d\x61\
\x70\x5f\x6c\x6f\x6f\x6b\x75\x70\x5f\x65\x6c\x65\x6d\x28\x26\x6c\x61\x74\x5f\
\x6d\x61\x70\x2c\x20\x26\x69\x6e\x64\x65\x78\x29\x3b\0\x09\x69\x66\x20\x28\x76\
\x61\x6c\x75\x65\x29\0\x09\x09\x2a\x76\x61\x6c\x75\x65\x20\x2b\x3d\x20\x31\x3b\
\0\x7d\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x5f\x76\x65\x72\x73\x69\x6f\x6e\0\
\x2e\x6d\x61\x70\x73\0\x6c\x69\x63\x65\x6e\x73\x65\0\x76\x65\x72\x73\x69\x6f\
\x6e\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x24\0\0\0\x24\0\0\0\x14\x03\0\0\x38\x03\
\0\0\x54\0\0\0\x08\0\0\0\x62\x01\0\0\x01\0\0\0\0\0\0\0\x29\0\0\0\xa3\x02\0\0\
\x01\0\0\0\0\0\0\0\x2b\0\0\0\x10\0\0\0\x62\x01\0\0\x0a\0\0\0\0\0\0\0\x82\x01\0\
\0\xba\x01\0\0\0\x6c\0\0\x08\0\0\0\x82\x01\0\0\xee\x01\0\0\x0c\x74\0\0\x10\0\0\
\0\x82\x01\0\0\xee\x01\0\0\x06\x74\0\0\x18\0\0\0\x82\x01\0\0\x11\x02\0\0\x0f\
\x7c\0\0\x20\0\0\0\x82\x01\0\0\x24\x02\0\0\x19\x78\0\0\x38\0\0\0\x82\x01\0\0\
\x42\x02\0\0\x12\x80\0\0\x40\0\0\0\x82\x01\0\0\x24\x02\0\0\x19\x78\0\0\x50\0\0\
\0\x82\x01\0\0\0\0\0\0\0\0\0\0\x68\0\0\0\x82\x01\0\0\x5a\x02\0\0\x02\x8c\0\0\
\x88\0\0\0\x82\x01\0\0\x8e\x02\0\0\x02\x90\0\0\xa3\x02\0\0\x26\0\0\0\0\0\0\0\
\x82\x01\0\0\x11\x02\0\0\x0f\xf8\0\0\x10\0\0\0\x82\x01\0\0\x24\x02\0\0\x19\xf4\
\0\0\x20\0\0\0\x82\x01\0\0\x42\x02\0\0\x12\xfc\0\0\x28\0\0\0\x82\x01\0\0\x24\
\x02\0\0\x19\xf4\0\0\x38\0\0\0\x82\x01\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\x82\x01\0\
\0\xc2\x02\0\0\x0a\x14\x01\0\x60\0\0\0\x82\x01\0\0\xef\x02\0\0\x06\x18\x01\0\
\x68\0\0\0\x82\x01\0\0\xfc\x02\0\0\x11\x24\x01\0\x78\0\0\0\x82\x01\0\0\x20\x03\
\0\0\x19\x28\x01\0\x88\0\0\0\x82\x01\0\0\0\0\0\0\0\0\0\0\x90\0\0\0\x82\x01\0\0\
\x40\x03\0\0\x02\x30\x01\0\xa8\0\0\0\x82\x01\0\0\x20\x03\0\0\x17\x28\x01\0\xb8\
\0\0\0\x82\x01\0\0\x65\x03\0\0\x0a\xa8\0\0\xe0\0\0\0\x82\x01\0\0\x79\x03\0\0\
\x02\xac\0\0\xf0\0\0\0\x82\x01\0\0\x79\x03\0\0\x02\xac\0\0\0\x01\0\0\x82\x01\0\
\0\x79\x03\0\0\x02\xac\0\0\x10\x01\0\0\x82\x01\0\0\x79\x03\0\0\x09\xac\0\0\x50\
\x01\0\0\x82\x01\0\0\x79\x03\0\0\x10\xac\0\0\x90\x01\0\0\x82\x01\0\0\x79\x03\0\
\0\x16\xac\0\0\xd0\x01\0\0\x82\x01\0\0\x79\x03\0\0\x1c\xac\0\0\x18\x02\0\0\x82\
\x01\0\0\x79\x03\0\0\x22\xac\0\0\x30\x02\0\0\x82\x01\0\0\x79\x03\0\0\x22\xac\0\
\0\x38\x02\0\0\x82\x01\0\0\xa0\x03\0\0\x06\x58\x01\0\x48\x02\0\0\x82\x01\0\0\
\xb3\x03\0\0\x0d\x5c\x01\0\x50\x02\0\0\x82\x01\0\0\xc5\x03\0\0\x1b\x60\x01\0\
\x58\x02\0\0\x82\x01\0\0\xc5\x03\0\0\x23\x60\x01\0\x60\x02\0\0\x82\x01\0\0\xc5\
\x03\0\0\x28\x60\x01\0\x68\x02\0\0\x82\x01\0\0\xc5\x03\0\0\x0d\x60\x01\0\x70\
\x02\0\0\x82\x01\0\0\xc5\x03\0\0\x12\x60\x01\0\x78\x02\0\0\x82\x01\0\0\xc5\x03\
\0\0\x30\x60\x01\0\x80\x02\0\0\x82\x01\0\0\xc5\x03\0\0\x34\x60\x01\0\x88\x02\0\
\0\x82\x01\0\0\xc5\x03\0\0\x0a\x60\x01\0\xa8\x02\0\0\x82\x01\0\0\xfe\x03\0\0\
\x06\x68\x01\0\xb8\x02\0\0\x82\x01\0\0\0\0\0\0\0\0\0\0\xd0\x02\0\0\x82\x01\0\0\
\x13\x04\0\0\x0a\x74\x01\0\xe8\x02\0\0\x82\x01\0\0\x43\x04\0\0\x06\x78\x01\0\
\xf0\x02\0\0\x82\x01\0\0\x4f\x04\0\0\x0a\x7c\x01\0\x08\x03\0\0\x82\x01\0\0\x5e\
\x04\0\0\x01\x88\x01\0\x10\0\0\0\x62\x01\0\0\x02\0\0\0\x18\0\0\0\x1a\0\0\0\x0d\
\x02\0\0\0\0\0\0\x38\0\0\0\x1a\0\0\0\x3e\x02\0\0\0\0\0\0\xa3\x02\0\0\x02\0\0\0\
\0\0\0\0\x1a\0\0\0\x0d\x02\0\0\0\0\0\0\x20\0\0\0\x1a\0\0\0\x3e\x02\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x90\0\0\0\x04\0\xf1\
\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2f\x01\0\0\0\0\x03\0\x50\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x0b\x01\0\0\0\0\x03\0\x70\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf4\
\0\0\0\0\0\x03\0\x90\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xdd\0\0\0\0\0\x03\0\xb0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc6\0\0\0\0\0\x03\0\xd0\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x27\x01\0\0\0\0\x03\0\xf0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x01\0\
\0\0\0\x03\0\x10\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xec\0\0\0\0\0\x03\0\x30\x02\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\xd5\0\0\0\0\0\x03\0\xb8\x02\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\xbe\0\0\0\0\0\x03\0\x08\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xfc\0\0\0\0\0\x03\
\0\xc8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe5\0\0\0\0\0\x03\0\xf0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\xce\0\0\0\0\0\x03\0\x10\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\0\0\0\
\0\0\x03\0\x30\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x02\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x64\0\
\0\0\x11\0\x05\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x4d\0\0\0\x11\0\x06\0\0\0\0\
\0\0\0\0\0\x04\0\0\0\0\0\0\0\x1d\x01\0\0\x12\0\x02\0\0\0\0\0\0\0\0\0\x98\0\0\0\
\0\0\0\0\x13\x01\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\x18\x03\0\0\0\0\0\0\x45\0\0\0\
\x11\0\x04\0\x20\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x3e\0\0\0\x11\0\x04\0\0\0\0\0\
\0\0\0\0\x20\0\0\0\0\0\0\0\x68\0\0\0\0\0\0\0\x01\0\0\0\x17\0\0\0\x40\0\0\0\0\0\
\0\0\x01\0\0\0\x17\0\0\0\x90\0\0\0\0\0\0\0\x01\0\0\0\x17\0\0\0\xd0\x02\0\0\0\0\
\0\0\x01\0\0\0\x16\0\0\0\x04\x04\0\0\0\0\0\0\0\0\0\0\x17\0\0\0\x10\x04\0\0\0\0\
\0\0\0\0\0\0\x16\0\0\0\x28\x04\0\0\0\0\0\0\0\0\0\0\x12\0\0\0\x40\x04\0\0\0\0\0\
\0\0\0\0\0\x13\0\0\0\x2c\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\x3c\0\0\0\0\0\0\0\0\0\
\0\0\x11\0\0\0\x50\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\x60\0\0\0\0\0\0\0\0\0\0\0\
\x10\0\0\0\x70\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\x10\0\
\0\0\x90\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\xa0\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\
\xb0\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\xc0\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\xd0\0\
\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\xe0\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\xf8\0\0\0\0\
\0\0\0\0\0\0\0\x11\0\0\0\x08\x01\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x18\x01\0\0\0\0\
\0\0\0\0\0\0\x11\0\0\0\x28\x01\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x38\x01\0\0\0\0\0\
\0\0\0\0\0\x11\0\0\0\x48\x01\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x58\x01\0\0\0\0\0\0\
\0\0\0\0\x11\0\0\0\x68\x01\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x78\x01\0\0\0\0\0\0\0\
\0\0\0\x11\0\0\0\x88\x01\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x98\x01\0\0\0\0\0\0\0\0\
\0\0\x11\0\0\0\xa8\x01\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\xb8\x01\0\0\0\0\0\0\0\0\0\
\0\x11\0\0\0\xc8\x01\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\xd8\x01\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\xe8\x01\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\xf8\x01\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\x08\x02\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x18\x02\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\x28\x02\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x38\x02\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\x48\x02\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x58\x02\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\x68\x02\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x78\x02\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\x88\x02\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x98\x02\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\xa8\x02\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\xb8\x02\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\xc8\x02\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\xd8\x02\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\xe8\x02\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\xf8\x02\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\x08\x03\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x18\x03\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\x28\x03\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x38\x03\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\x48\x03\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x64\x03\0\0\0\0\0\0\0\0\0\0\
\x10\0\0\0\x74\x03\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\x8c\x03\0\0\0\0\0\0\0\0\0\0\
\x11\0\0\0\x9c\x03\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\x59\x5a\x5c\x5b\x57\x58\0\x2e\
\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\x2e\x72\
\x65\x6c\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\x62\x6c\x6f\x63\x6b\x2f\
\x62\x6c\x6f\x63\x6b\x5f\x69\x6f\x5f\x73\x74\x61\x72\x74\0\x2e\x6d\x61\x70\x73\
\0\x6d\x79\x5f\x6d\x61\x70\0\x6c\x61\x74\x5f\x6d\x61\x70\0\x5f\x76\x65\x72\x73\
\x69\x6f\x6e\0\x2e\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\0\x5f\x6c\
\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\
\x74\x2f\x62\x6c\x6f\x63\x6b\x2f\x62\x6c\x6f\x63\x6b\x5f\x69\x6f\x5f\x64\x6f\
\x6e\x65\0\x74\x72\x61\x63\x65\x78\x33\x2e\x62\x70\x66\x2e\x63\0\x2e\x73\x74\
\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\x2e\x42\x54\
\x46\0\x4c\x42\x42\x31\x5f\x39\0\x4c\x42\x42\x31\x5f\x32\x39\0\x4c\x42\x42\x31\
\x5f\x31\x39\0\x4c\x42\x42\x31\x5f\x37\0\x4c\x42\x42\x31\x5f\x32\x37\0\x4c\x42\
\x42\x31\x5f\x31\x37\0\x4c\x42\x42\x31\x5f\x35\0\x4c\x42\x42\x31\x5f\x32\x35\0\
\x4c\x42\x42\x31\x5f\x31\x35\0\x4c\x42\x42\x31\x5f\x33\0\x4c\x42\x42\x31\x5f\
\x32\x33\0\x4c\x42\x42\x31\x5f\x31\x33\0\x62\x70\x66\x5f\x70\x72\x6f\x67\x32\0\
\x62\x70\x66\x5f\x70\x72\x6f\x67\x31\0\x4c\x42\x42\x31\x5f\x32\x31\0\x4c\x42\
\x42\x31\x5f\x31\x31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\x01\0\0\
\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x98\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x71\0\0\0\x01\0\0\0\x06\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xd8\0\0\0\0\0\0\0\x18\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\xf0\x03\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x65\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\x04\
\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x4e\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x34\x04\0\0\0\0\0\0\
\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb2\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\x04\0\0\0\0\0\0\xd0\x08\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0b\0\0\0\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\x0d\0\0\0\0\0\0\xac\x03\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa6\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\xb8\x10\0\0\0\0\0\0\x40\x02\0\0\0\0\0\0\x0f\0\0\0\x12\0\0\0\x08\
\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x14\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\xf8\x12\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x09\0\0\0\x02\0\0\0\x08\0\0\0\0\0\
\0\0\x10\0\0\0\0\0\0\0\x6d\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\
\x13\0\0\0\0\0\0\x30\0\0\0\0\0\0\0\x09\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\xae\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\x13\0\0\0\
\0\0\0\x40\0\0\0\0\0\0\0\x09\0\0\0\x07\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\
\0\x07\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x78\x13\0\0\0\0\0\0\x60\
\x03\0\0\0\0\0\0\x09\0\0\0\x08\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x56\0\
\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\xd8\x16\0\0\0\0\0\0\x06\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9e\0\0\0\x03\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xde\x16\0\0\0\0\0\0\x37\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
}

#ifdef __cplusplus
struct tracex3_bpf *tracex3_bpf::open(const struct bpf_object_open_opts *opts) { return tracex3_bpf__open_opts(opts); }
struct tracex3_bpf *tracex3_bpf::open_and_load() { return tracex3_bpf__open_and_load(); }
int tracex3_bpf::load(struct tracex3_bpf *skel) { return tracex3_bpf__load(skel); }
int tracex3_bpf::attach(struct tracex3_bpf *skel) { return tracex3_bpf__attach(skel); }
void tracex3_bpf::detach(struct tracex3_bpf *skel) { tracex3_bpf__detach(skel); }
void tracex3_bpf::destroy(struct tracex3_bpf *skel) { tracex3_bpf__destroy(skel); }
const void *tracex3_bpf::elf_bytes(size_t *sz) { return tracex3_bpf__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
tracex3_bpf__assert(struct tracex3_bpf *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __TRACEX3_BPF_SKEL_H__ */
